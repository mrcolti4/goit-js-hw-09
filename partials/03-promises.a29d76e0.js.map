{"mappings":"oeAAA,MAAMA,EAAc,CAClBC,aAAcC,SAASC,cAAc,kBACrCC,YAAaF,SAASC,cAAc,iBACpCE,cAAeH,SAASC,cAAc,mBACtCG,iBAAkBJ,SAASC,cAAc,iB,iBCD3C,IAAII,EAgBJ,SAASC,EAAcC,EAAUC,IAdjC,SAAuBC,EAAUD,GAC/B,MAAME,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAAKC,KAC5BL,EAEFI,EAAI,C,SAAEL,E,MAAUD,IAGhBO,EAAI,C,SAAEN,E,MAAUD,GAAQ,G,EAO5BQ,CAAcT,EAAUC,GACrBS,MAAK,EAACR,SAAEA,EAAQD,MAAEA,MACjBU,EAAAC,OAAOC,QAAQ,uBAAqBX,QAAiBJ,MAAiB,IAEvEgB,OAAM,EAACZ,SAAEA,EAAQD,MAAEA,MAClBU,EAAAC,OAAOG,QAAQ,sBAAoBb,QAAeJ,MAAiB,G,CAqBzEP,EAAYM,iBAAiBmB,iBAAiB,SAjBdC,IAC9BnB,EAAe,EACfmB,EAAEC,iBACF,MAAMC,EAAaC,OAAO7B,EAAYC,aAAa6B,OAC7CC,EAAYF,OAAO7B,EAAYI,YAAY0B,OACjDE,YAAW,KACTxB,EAAc,EAAGoB,GACjBrB,GAAgBqB,EAChB,IAAK,IAAIK,EAAI,EAAGA,GAAKJ,OAAO7B,EAAYK,cAAcyB,OAAQG,IAC5DD,YAAW,KACTxB,EAAcyB,EAAGF,GACjBxB,GAAgBwB,CAAS,GACxBA,GAAaE,EAAI,GAAG,GAExBL,EAAW","sources":["src/js/refsPromise.js","src/js/03-promises.js"],"sourcesContent":["const refsPromise = {\n  promiseDelay: document.querySelector('[name=\"delay\"]'),\n  promiseStep: document.querySelector('[name=\"step\"]'),\n  promiseAmount: document.querySelector('[name=\"amount\"]'),\n  createPromiseBtn: document.querySelector('.form button'),\n};\nexport { refsPromise };\n","import { refsPromise } from './refsPromise';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet currentDelay;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((res, rej) => {\n    if (shouldResolve) {\n      // Fulfill\n      res({ position, delay });\n    } else {\n      // Reject\n      rej({ position, delay });\n    }\n  });\n  return promise;\n}\n\nfunction handlePromise(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${currentDelay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${currentDelay}ms`);\n    });\n}\n\nconst onBtnClickHandlePromise = e => {\n  currentDelay = 0;\n  e.preventDefault();\n  const firstDelay = Number(refsPromise.promiseDelay.value);\n  const stepDelay = Number(refsPromise.promiseStep.value);\n  setTimeout(() => {\n    handlePromise(1, firstDelay);\n    currentDelay += firstDelay;\n    for (let i = 2; i <= Number(refsPromise.promiseAmount.value); i++) {\n      setTimeout(() => {\n        handlePromise(i, stepDelay);\n        currentDelay += stepDelay;\n      }, stepDelay * (i - 1));\n    }\n  }, firstDelay);\n};\n\nrefsPromise.createPromiseBtn.addEventListener('click', onBtnClickHandlePromise);\n"],"names":["$347d38d0b4c20724$export$6ed5f6991ffb3d3f","promiseDelay","document","querySelector","promiseStep","promiseAmount","createPromiseBtn","$47d4ff9957288465$var$currentDelay","$47d4ff9957288465$var$handlePromise","position1","delay","position","shouldResolve","Math","random","Promise","res","rej","$47d4ff9957288465$var$createPromise","then","$iQIUW","Notify","success","catch","failure","addEventListener","e","preventDefault","firstDelay","Number","value","stepDelay","setTimeout","i"],"version":3,"file":"03-promises.a29d76e0.js.map"}